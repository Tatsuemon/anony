// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: anony.proto

package rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserBase) Reset() {
	*x = UserBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBase) ProtoMessage() {}

func (x *UserBase) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBase.ProtoReflect.Descriptor instead.
func (*UserBase) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{0}
}

func (x *UserBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserBase) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            *UserBase `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password        string    `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ConfirmPassword string    `protobuf:"bytes,3,opt,name=confirm_password,json=confirmPassword,proto3" json:"confirm_password,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserRequest) GetUser() *UserBase {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *UserBase `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token string    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserResponse) GetUser() *UserBase {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LogInUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameOrEmail string `protobuf:"bytes,1,opt,name=nameOrEmail,proto3" json:"nameOrEmail,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LogInUserRequest) Reset() {
	*x = LogInUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInUserRequest) ProtoMessage() {}

func (x *LogInUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInUserRequest.ProtoReflect.Descriptor instead.
func (*LogInUserRequest) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{3}
}

func (x *LogInUserRequest) GetNameOrEmail() string {
	if x != nil {
		return x.NameOrEmail
	}
	return ""
}

func (x *LogInUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LogInUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *UserBase `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token string    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LogInUserResponse) Reset() {
	*x = LogInUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInUserResponse) ProtoMessage() {}

func (x *LogInUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInUserResponse.ProtoReflect.Descriptor instead.
func (*LogInUserResponse) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{4}
}

func (x *LogInUserResponse) GetUser() *UserBase {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LogInUserResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CreateAnonyURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalUrl string `protobuf:"bytes,1,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
	IsActive    bool   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *CreateAnonyURLRequest) Reset() {
	*x = CreateAnonyURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnonyURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnonyURLRequest) ProtoMessage() {}

func (x *CreateAnonyURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnonyURLRequest.ProtoReflect.Descriptor instead.
func (*CreateAnonyURLRequest) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAnonyURLRequest) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *CreateAnonyURLRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type CreateAnonyURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalUrl string `protobuf:"bytes,1,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
	ShortUrl    string `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	IsActive    bool   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *CreateAnonyURLResponse) Reset() {
	*x = CreateAnonyURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anony_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnonyURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnonyURLResponse) ProtoMessage() {}

func (x *CreateAnonyURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anony_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnonyURLResponse.ProtoReflect.Descriptor instead.
func (*CreateAnonyURLResponse) Descriptor() ([]byte, []int) {
	return file_anony_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAnonyURLResponse) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *CreateAnonyURLResponse) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *CreateAnonyURLResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

var File_anony_proto protoreflect.FileDescriptor

var file_anony_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x34, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x50, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4e, 0x0a, 0x11, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x75, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x6f, 0x6e, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x32, 0x90, 0x01, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x6f, 0x6e,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x61, 0x6e,
	0x6f, 0x6e, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x5d,
	0x0a, 0x0c, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x55, 0x52, 0x4c,
	0x12, 0x1c, 0x2e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x6f, 0x6e, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x5a,
	0x03, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anony_proto_rawDescOnce sync.Once
	file_anony_proto_rawDescData = file_anony_proto_rawDesc
)

func file_anony_proto_rawDescGZIP() []byte {
	file_anony_proto_rawDescOnce.Do(func() {
		file_anony_proto_rawDescData = protoimpl.X.CompressGZIP(file_anony_proto_rawDescData)
	})
	return file_anony_proto_rawDescData
}

var file_anony_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_anony_proto_goTypes = []interface{}{
	(*UserBase)(nil),               // 0: anony.UserBase
	(*CreateUserRequest)(nil),      // 1: anony.CreateUserRequest
	(*CreateUserResponse)(nil),     // 2: anony.CreateUserResponse
	(*LogInUserRequest)(nil),       // 3: anony.LogInUserRequest
	(*LogInUserResponse)(nil),      // 4: anony.LogInUserResponse
	(*CreateAnonyURLRequest)(nil),  // 5: anony.CreateAnonyURLRequest
	(*CreateAnonyURLResponse)(nil), // 6: anony.CreateAnonyURLResponse
}
var file_anony_proto_depIdxs = []int32{
	0, // 0: anony.CreateUserRequest.user:type_name -> anony.UserBase
	0, // 1: anony.CreateUserResponse.user:type_name -> anony.UserBase
	0, // 2: anony.LogInUserResponse.user:type_name -> anony.UserBase
	1, // 3: anony.UserService.CreateUser:input_type -> anony.CreateUserRequest
	3, // 4: anony.UserService.LogInUser:input_type -> anony.LogInUserRequest
	5, // 5: anony.AnonyService.CreateAnonyURL:input_type -> anony.CreateAnonyURLRequest
	2, // 6: anony.UserService.CreateUser:output_type -> anony.CreateUserResponse
	4, // 7: anony.UserService.LogInUser:output_type -> anony.LogInUserResponse
	6, // 8: anony.AnonyService.CreateAnonyURL:output_type -> anony.CreateAnonyURLResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_anony_proto_init() }
func file_anony_proto_init() {
	if File_anony_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_anony_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anony_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anony_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anony_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anony_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anony_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnonyURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anony_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnonyURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anony_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_anony_proto_goTypes,
		DependencyIndexes: file_anony_proto_depIdxs,
		MessageInfos:      file_anony_proto_msgTypes,
	}.Build()
	File_anony_proto = out.File
	file_anony_proto_rawDesc = nil
	file_anony_proto_goTypes = nil
	file_anony_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	// rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
	// rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty);
	LogInUser(ctx context.Context, in *LogInUserRequest, opts ...grpc.CallOption) (*LogInUserResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/anony.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) LogInUser(ctx context.Context, in *LogInUserRequest, opts ...grpc.CallOption) (*LogInUserResponse, error) {
	out := new(LogInUserResponse)
	err := c.cc.Invoke(ctx, "/anony.UserService/LogInUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	// rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
	// rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty);
	LogInUser(context.Context, *LogInUserRequest) (*LogInUserResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserServiceServer) LogInUser(context.Context, *LogInUserRequest) (*LogInUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogInUser not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anony.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_LogInUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogInUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).LogInUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anony.UserService/LogInUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).LogInUser(ctx, req.(*LogInUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anony.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "LogInUser",
			Handler:    _UserService_LogInUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "anony.proto",
}

// AnonyServiceClient is the client API for AnonyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnonyServiceClient interface {
	CreateAnonyURL(ctx context.Context, in *CreateAnonyURLRequest, opts ...grpc.CallOption) (*CreateAnonyURLResponse, error)
}

type anonyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnonyServiceClient(cc grpc.ClientConnInterface) AnonyServiceClient {
	return &anonyServiceClient{cc}
}

func (c *anonyServiceClient) CreateAnonyURL(ctx context.Context, in *CreateAnonyURLRequest, opts ...grpc.CallOption) (*CreateAnonyURLResponse, error) {
	out := new(CreateAnonyURLResponse)
	err := c.cc.Invoke(ctx, "/anony.AnonyService/CreateAnonyURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnonyServiceServer is the server API for AnonyService service.
type AnonyServiceServer interface {
	CreateAnonyURL(context.Context, *CreateAnonyURLRequest) (*CreateAnonyURLResponse, error)
}

// UnimplementedAnonyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnonyServiceServer struct {
}

func (*UnimplementedAnonyServiceServer) CreateAnonyURL(context.Context, *CreateAnonyURLRequest) (*CreateAnonyURLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnonyURL not implemented")
}

func RegisterAnonyServiceServer(s *grpc.Server, srv AnonyServiceServer) {
	s.RegisterService(&_AnonyService_serviceDesc, srv)
}

func _AnonyService_CreateAnonyURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAnonyURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnonyServiceServer).CreateAnonyURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anony.AnonyService/CreateAnonyURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnonyServiceServer).CreateAnonyURL(ctx, req.(*CreateAnonyURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnonyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anony.AnonyService",
	HandlerType: (*AnonyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAnonyURL",
			Handler:    _AnonyService_CreateAnonyURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "anony.proto",
}
